from flask import Flask, render_template, Response, jsonify, request
import cv2
import smtplib

app = Flask(__name__)


@app.route('/')
def home():
    return render_template('home.html')


@app.route('/Camara1')
def c1():
    return render_template('c1.html')


@app.route('/Camara2')
def c2():
    return render_template('c2.html')


@app.route('/correo')
def correo():
    # import all necessary components
    # import all necessary components
    import smtplib
    from email.mime.text import MIMEText
    from email.mime.image import MIMEImage
    from email.mime.multipart import MIMEMultipart

    port = 587
    smtp_server = "smtp.gmail.com"
    login = "" # paste your login generated by Mailtrap
    password = "Anesartnoc123" # paste your password generated by Mailtrap

    sender_email = "alkaiser850@gmail.com"
    receiver_email = "lbellor@unal.edu.co"
    message = MIMEMultipart("alternative")

    # We assume that the image file is in the same directory that you run your Python script from
    fp = open('image.jpg', 'rb')
    image = MIMEImage(fp.read())
    fp.close()
    message.attach(image)

    # send your email
    server = smtplib.SMTP(smtp_server,port)
    server.ehlo()
    server.starttls()
    server.login(login, password)
    server.sendmail(sender_email, receiver_email, message.as_string())
    print('Sent')
    return render_template('home.html')


camera = cv2.VideoCapture('http://192.168.0.35:8080/video')  # use 0 for web camera
#  for cctv camera use rtsp://username:password@ip_address:554/user=username_password='password'_channel=channel_number_stream=0.sdp' instead of camera




def gen_frames_c1():
    camera = cv2.VideoCapture('http://192.168.0.35:8080/video')  # generate frame by frame from camera
    while True:
        # Capture frame-by-frame
        success, frame = camera.read()  # read the camera frame
        if not success:
            break
        else:
            ret, buffer = cv2.imencode('.jpg', frame)
            frame = buffer.tobytes()
            yield (b'--frame\r\n'
                   b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')  # concat frame one by one and show result

def gen_frames_c2():
    camera = cv2.VideoCapture('http://192.168.0.15:8080/video')  # generate frame by frame from camera
    while True:
        # Capture frame-by-frame
        success, frame = camera.read()  # read the camera frame
        if not success:
            break
        else:
            ret, buffer = cv2.imencode('.jpg', frame)
            frame = buffer.tobytes()
            yield (b'--frame\r\n'
                   b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')  # concat frame one by one and show result


@app.route('/photo')
def photo():
    success, frame = camera.read()  # read the camera frame
    cv2.imwrite('image.jpg', frame)
    return render_template('home_1.html')


@app.route('/video_feed')
def video_feed():
    """Video streaming route. Put this in the src attribute of an img tag."""
    return Response(gen_frames_c1(),
                    mimetype='multipart/x-mixed-replace; boundary=frame')
@app.route('/video_feed_2')
def video_feed_2():
    """Video streaming route. Put this in the src attribute of an img tag."""
    return Response(gen_frames_c2(),
                    mimetype='multipart/x-mixed-replace; boundary=frame')


if __name__ == '__main__':
    app.run(debug=True)
